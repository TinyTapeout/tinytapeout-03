--- 
# TinyTapeout project information
project:
  wokwi_id:    362911430638568449        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
#  source_files:        
#    - counter.v
#    - decoder.v
#  top_module:  "seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# Keep a track of the submission yaml
yaml_version: 3.0

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Etienne de Maricourt"      # Your name
  title:        "Desperate Tapeout"      # Project title
  language:     "Wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Customized UART string transmitter"      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      Shameless copy of TT02 "Customizable UART String" by J. Rosenthal, since getting started the day of the submission deadline is NOT a good idea.
      
      This circuit implements five shift registers with 21 bits: seven idle bits, one start bit, eight data bits, one stop bit, and four more idle bits. The circuit supports transmitting the string "EDM!"

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Connect an Arduino serial RX pin to the eight output pin (Output[7]). In the Arduino code, set the serial baud rate Serial.begin(); in the *.ino file to 300.
      
      Set the PCB clock frequency to 300Hz. Set the slide switch to the clock. Set SW7 to OFF (‘Load’). Set SW8 to ON (‘Output Enable’). Set SW7 to ON (‘TX’).

# A description of what the inputs do
  inputs:               
    - none
    - none
    - none
    - none
    - none
    - none
    - Load TX data
    - Output enable

# A description of what the outputs do
  outputs:
    - Load TX data
    - Output enable
    - none
    - none
    - none
    - none
    - none
    - TX

# The following fields are optional
  tag:          "uart,serial"      # comma separated list of tags: test encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "MCU with UART receiver, UART-to-USB adapter"      # Describe any external hardware needed
  discord:      "lemon#6690"      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     300       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
